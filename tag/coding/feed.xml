<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="https://dejanperetin.com/tag/coding/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://dejanperetin.com/" rel="alternate" type="text/html" />
  <updated>2021-05-28T05:48:34+01:00</updated>
  <id>https://dejanperetin.com/tag/coding/feed.xml</id>

  
  
  

  
    <title type="html">dejanperetin.com | </title>
  

  
    <subtitle>Writing things down so I don't forget. Software Engineer at Pinterest. Opinions expressed are my own.</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">Why I Don’t Vote</title>
      <link href="https://dejanperetin.com/why-i-dont-vote" rel="alternate" type="text/html" title="Why I Don't Vote" />
      <published>2020-01-05T10:33:37+00:00</published>
      <updated>2020-01-05T10:33:37+00:00</updated>
      <id>https://dejanperetin.com/why-i-dont-vote</id>
      <content type="html" xml:base="https://dejanperetin.com/why-i-dont-vote">&lt;p&gt;Wolfram Mathematica is an amazing software that I love using, but the choice to use it for any meaningful application is 
difficult to justify due to its cost and licence.&lt;/p&gt;

&lt;p&gt;Presidential elections in Croatia seemed like a good excuse to fire it
up and generate some graphs. Which I did. And here is the winner of the election per administrative subdivisions: &lt;img src=&quot;assets/images/why_i_dont_vote/finalni_rezultati_po_opcinama.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/why_i_dont_vote/milanovic_drugi_krug.png&quot; alt=&quot;&quot; width=&quot;365px&quot; /&gt; &lt;img src=&quot;assets/images/why_i_dont_vote/kolinda_drugi_krug.png&quot; alt=&quot;&quot; width=&quot;365px&amp;quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Mathematica 12 updated the built in database of geographic entities, so I was optimistic about using it to generate graphs
showing results of the elections, broken down by Croatian administrative subdivisions (&lt;em&gt;županije&lt;/em&gt; and &lt;em&gt;općine&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;First step was to map the subdivision names from the election results onto Mathematica entities. Election results are broken down by first administrative level (&lt;em&gt;županije&lt;/em&gt;) and by second administrative level (&lt;em&gt;općine&lt;/em&gt;). There is also a breakdown by country, for Croatian citizens living abroad.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;There is only 21 first level  administrative units, so I just mapped those by hand.&lt;/li&gt;
  &lt;li&gt;People voted in 48 different countries and I wanted to avoid mapping those by hand. Passing the Croatian names to the translate API first worked well. This mapped all of the countries bar a few where abbreviated name was used in the results (Croatian abbreviation for USA is SAD, which was translated to &lt;em&gt;now&lt;/em&gt;) or where the country name changed recently (like Macedonia).&lt;/li&gt;
  &lt;li&gt;There are 556 second level administrative units in Croatia. Luckily Mathematica doesn’t translate these name, so a simple removal of whitespace and replacement of special Croatian characters mapped around 540 of them out of the box.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The full mapping of Croatian names to Mathematica entities is available on &lt;a href=&quot;https://github.com/dperetin/MathematicaCroatianGeoEntities/blob/master/croatian_admin_subdivisions.wl&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To use it you simply checkout the package, import entities with:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-mathematica&quot;&gt;NotebookEvaluate[&quot;PATH_TO_CHECKOUT_REPO/MathematicaCroatianGeoEntities/\
croatian_admin_subdivisions.wl&quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can then generate the graphs with:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-mathematica&quot;&gt;GeoListPlot[Values[adminDivisions1]]
GeoListPlot[
 Flatten[Values[
   Join[adminDivisions2[#] &amp;amp; /@ Keys[adminDivisions2]]]]]
GeoListPlot[Values[adminDivisions2[&quot;KARLOVAČKA ŽUPANIJA&quot;]], 
 GeoBackground -&amp;gt; GeoStyling[&quot;StreetMap&quot;]]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will create maps with all subdivision borders:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/why_i_dont_vote/zupanije_prazno_1.png&quot; alt=&quot;&quot; width=&quot;243px&quot; /&gt; &lt;img src=&quot;assets/images/why_i_dont_vote/opcine_prazno_1.png&quot; alt=&quot;&quot; width=&quot;243px&quot; /&gt; &lt;img src=&quot;assets/images/why_i_dont_vote/karlovac_prazno_1.png&quot; alt=&quot;&quot; width=&quot;240px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There is immediately a problem visible on the last map, one subdivision is missing. In fact, Wolfram dataset has 9 subdivisions missing and a bunch of non-existent subdivisions included. Three of them are called &lt;em&gt;Unknown_1&lt;/em&gt;, &lt;em&gt;Unknown_2&lt;/em&gt;, &lt;em&gt;Unknown_3&lt;/em&gt;, which doesn’t sound good.&lt;/p&gt;

&lt;p&gt;I tried finding a more complete and up do date dataset, but was unsuccessful. I checked data available on:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gadm.org/index.html&quot;&gt;https://gadm.org/index.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.diva-gis.org/&quot;&gt;http://www.diva-gis.org/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.naturalearthdata.com/&quot;&gt;http://www.naturalearthdata.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://geonode.iwlearn.org/layers/geonode:croatia_admin_boundaries#more&quot;&gt;http://geonode.iwlearn.org/layers/geonode:croatia_admin_boundaries#more&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of them have the same incomplete dataset.&lt;/p&gt;

&lt;p&gt;So while I’m hunting down the most up to date polygon data for Croatian admin subdivisions, here are some more graphs.&lt;/p&gt;

&lt;h3 id=&quot;winner-by-subdivision-in-the-first-round-of-election&quot;&gt;Winner by Subdivision in the First Round of Election&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/why_i_dont_vote/zupanije_prvi_krug.png&quot; alt=&quot;&quot; width=&quot;365px&quot; /&gt; &lt;img src=&quot;assets/images/why_i_dont_vote/opcine_prvi_krug.png&quot; alt=&quot;&quot; width=&quot;365px&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;percentage-of-votes-for-top-3-candidates-in-the-first-round-of-election&quot;&gt;Percentage of Votes for Top 3 Candidates in the First Round of Election&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/why_i_dont_vote/milanovic_prvi_krug.png&quot; alt=&quot;&quot; width=&quot;365px&quot; /&gt; &lt;img src=&quot;assets/images/why_i_dont_vote/kolinda_prvi_krug.png&quot; alt=&quot;&quot; width=&quot;365px&quot; /&gt; &lt;img src=&quot;assets/images/why_i_dont_vote/skoro_prvi_krug.png&quot; alt=&quot;&quot; width=&quot;365px&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;winner-by-country-in-the-first-round-of-election&quot;&gt;Winner by Country in the First Round of Election&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/why_i_dont_vote/zemlje_prvi_krug.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Dejan Peretin</name>
        
        
      </author>

      

      
        <category term="Coding" />
      
        <category term="Data Visualization" />
      

      
        <summary type="html">Wolfram Mathematica is an amazing software that I love using, but the choice to use it for any meaningful application is difficult to justify due to its cost and licence.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">CVS merge in Eclipse</title>
      <link href="https://dejanperetin.com/cvs_merge" rel="alternate" type="text/html" title="CVS merge in Eclipse" />
      <published>2014-03-23T10:33:37+00:00</published>
      <updated>2014-03-23T10:33:37+00:00</updated>
      <id>https://dejanperetin.com/cvs_merge</id>
      <content type="html" xml:base="https://dejanperetin.com/cvs_merge">&lt;p&gt;Ever so often a need for merging CVS branches arises and since the task can be a bit touchy, writing down some basic concepts seems like a good idea.&lt;/p&gt;

&lt;p&gt;So here are a few basic steps the process boils down to.&lt;/p&gt;

&lt;h1 id=&quot;branching&quot;&gt;Branching&lt;/h1&gt;
&lt;p&gt;Creating a branch is done with &lt;em&gt;right clicking on a project -&amp;gt; Team -&amp;gt; Branch&lt;/em&gt;. Leave &lt;em&gt;Start working in the branch&lt;/em&gt; checked so newly created branch will be checked out automatically. Common scenario is that people make some changes on their local version of the code and then realize that they do not want to commit it to the main branch. If you create a branch with uncommitted changes in your workspace, those changes will be available for committing to the branch.&lt;/p&gt;

&lt;h1 id=&quot;merging&quot;&gt;Merging&lt;/h1&gt;
&lt;p&gt;Lets assume we are to do a merge of a HEAD branch onto some FEATURE branch (HEAD is the &lt;strong&gt;source&lt;/strong&gt; branch and FEATURE is the &lt;strong&gt;target&lt;/strong&gt; branch).&lt;/p&gt;

&lt;p&gt;Procedure:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Checkout the source branch, do a sync, make sure there are no changes between your local version of the source branch and the remote version.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Tag the source branch. Give the tag a name that will provide information about the date of merging and branches that were involved in the merge. (eg. &lt;code class=&quot;highlighter-rouge&quot;&gt;M_yyyymmdd_HEAD_FEATURE&lt;/code&gt;). Tagging is done with &lt;em&gt;right clicking on the project -&amp;gt; Team -&amp;gt; tag as new version&lt;/em&gt;. The purpose of tagging at this point in the process is to avoid situations where somebody makes a commit while you are merging. If this happens, CVS will not be aware of the changes made in that commit.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Checkout the target branch (&lt;em&gt;right click on the project -&amp;gt; Team -&amp;gt; Switch to Another Branch or Version&lt;/em&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Do the merge.
    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;right click on the project -&amp;gt; Team -&amp;gt; Merge&lt;/em&gt;&lt;/li&gt;
      &lt;li&gt;Select the tag you created in step 2 (M_yyyymmdd_HEAD_FEATURE in this case) as &lt;em&gt;Branch or version to be merged&lt;/em&gt; .&lt;/li&gt;
      &lt;li&gt;Select the tag you made in step 2 but in the previous merge (if this is the very first merge, select the version created at the branching point) as &lt;em&gt;Common base version&lt;/em&gt;.&lt;/li&gt;
      &lt;li&gt;Select &lt;em&gt;Preview the merge in the sync view&lt;/em&gt; option.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Resolve conflicts. You can’t automate this step.
    &lt;ul&gt;
      &lt;li&gt;Non conflicting changes could be just copied over.&lt;/li&gt;
      &lt;li&gt;Make changes to conflicting files and mark them as merged.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Commit all new changes. Make the commit message something like:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;- merge changes HEAD -&amp;gt; FEATURE&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Little tip at the end. If a FEATURE branch needs to be merged onto HEAD branch after some development period, its a good idea to merge HEAD branch onto FEATURE branch first. All conflicts will have to be resolved on a FEATURE branch which will make FEATURE to HEAD merge a trivial one.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Dejan Peretin</name>
        
        
      </author>

      

      
        <category term="Coding" />
      

      
        <summary type="html">Ever so often a need for merging CVS branches arises and since the task can be a bit touchy, writing down some basic concepts seems like a good idea.</summary>
      

      
      
    </entry>
  
</feed>
